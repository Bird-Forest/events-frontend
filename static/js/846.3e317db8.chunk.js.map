{"version":3,"file":"static/js/846.3e317db8.chunk.js","mappings":"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","sources":["helper/categories.js","components/charts/Chart.styled.js","components/charts/helpers.js","components/charts/BarOrganizer.jsx","components/charts/СircleOrganizer.jsx","components/charts/ChartsOrganizer.jsx","components/charts/BarSpeciality.jsx","components/charts/CircleSpeciality.jsx","components/charts/ChartsSpeciality.jsx","pages/ChartPage.jsx","pages/Page.styled.js"],"sourcesContent":["export default function getCategories(items, itemName) {\n  if (!items) return [];\n  return items.reduce((acc, item) => {\n    if (!acc.includes(item[itemName])) acc.push(item[itemName]);\n    return acc.sort((a, b) => a.localeCompare(b));\n  }, []);\n}\n","import styled from 'styled-components';\n\nexport const WrapCharts = styled.div`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  justify-content: center;\n  overflow-y: auto;\n  scroll-behavior: smooth;\n  gap: 16px;\n  list-style: none;\n  padding: 8px;\n  margin: 0 auto;\n  &::-webkit-scrollbar {\n    width: 8px;\n    height: 80px;\n  }\n  &::-webkit-scrollbar-track {\n    background: #ffffff;\n    border-radius: 4px;\n    margin: 20px 0;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background: #01579b;\n  }\n  @media only screen and (min-width: 768px) {\n    padding: 8px 16px;\n  }\n  @media only screen and (min-width: 1100px) {\n    margin: 20px auto;\n  }\n  @media only screen and (min-width: 1449px) {\n    margin: 0 auto;\n    overflow-y: hidden;\n  }\n`;\nexport const WrapCartOrganizer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n  padding: 0;\n  margin: 0 auto;\n`;\nexport const WrapCartSpeciality = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 20px;\n  padding: 0;\n  margin: 0 auto;\n`;\nexport const WrapChart = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  backdrop-filter: blur(2px);\n  background-color: rgb(204, 221, 255, 0.5);\n  border-radius: 16px;\n  /* width: 300px;\n  height: auto; */\n  padding: 10px;\n  margin: 0 auto;\n`;\n","// *******\nfunction getOrganizerRatings(data, labels) {\n  const organizerRatings = {};\n\n  data.forEach(item => {\n    const { organizer, participants } = item;\n    const labelIndex = labels.findIndex(label => label === organizer);\n\n    if (labelIndex !== -1) {\n      if (!organizerRatings[organizer]) {\n        organizerRatings[organizer] = 0;\n      }\n      organizerRatings[organizer] += participants.length;\n    }\n  });\n  // Преобразуем объект рейтингов в массив значений\n  const ratingsArray = Object.values(organizerRatings);\n\n  return ratingsArray;\n}\n\n// *******\nfunction getSpecialityRatings(data, labels) {\n  const specialityRatings = {};\n\n  data.forEach(item => {\n    const { title, participants } = item;\n    const labelIndex = labels.findIndex(label => label === title);\n\n    if (labelIndex !== -1) {\n      if (!specialityRatings[title]) {\n        specialityRatings[title] = 0;\n      }\n      specialityRatings[title] += participants.length;\n    }\n  });\n  // Преобразуем объект рейтингов в массив значений\n  const ratingsArray = Object.values(specialityRatings);\n\n  return ratingsArray;\n}\n\nexport { getOrganizerRatings, getSpecialityRatings };\n","import React from 'react';\nimport getCategories from '../../helper/categories';\nimport { getOrganizerRatings } from './helpers';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { WrapChart } from './Chart.styled';\nChartJS.register(\n  BarElement,\n  CategoryScale,\n  LinearScale,\n  Title,\n  Tooltip,\n  Legend\n);\n\n// export const options = {\n//   indexAxis: 'y',\n//   elements: {\n//     bar: {\n//       borderWidth: 2,\n//     },\n//   },\n//   responsive: true,\n//   plugins: {\n//     legend: {\n//       position: 'top',\n//       labels: {\n//         font: {\n//           size: 14,\n//         },\n//         color: 'rgb(255, 255, 255)',\n//       },\n//     },\n//     title: {\n//       display: true,\n//       text: 'Registered participants by organizer',\n//       color: 'rgb(255, 255, 255)',\n//       font: {\n//         size: 16,\n//       },\n//     },\n//     // options: {\n//     //   scales: {\n//     //     color: ['#ffffff', '#ffffff'],\n//     //     y: {\n//     //       color: '#ffffff',\n//     //     },\n//     //   },\n//     // },\n//   },\n// };\n\nexport default function BarOrganizer({ data }) {\n  const { t } = useTranslation();\n  const labels = getCategories(data, 'organizer');\n  const ratings = getOrganizerRatings(data, labels);\n\n  const options = {\n    indexAxis: 'y',\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          font: {\n            size: 14,\n          },\n          color: 'rgb(255, 255, 255)',\n        },\n      },\n      title: {\n        display: true,\n        text: `${t('chart.title1')}`,\n        color: 'rgb(255, 255, 255)',\n        font: {\n          size: 16,\n        },\n      },\n    },\n  };\n\n  const bar = {\n    labels,\n    datasets: [\n      {\n        label: `${t('chart.label1')}`,\n        data: ratings.map(el => el),\n        backgroundColor: '#ffb74d',\n        borderWidth: 1,\n        borderColor: ' #ffffff',\n      },\n    ],\n  };\n\n  return (\n    <WrapChart>\n      <Bar options={options} data={bar} width=\"300\" height=\"300\" />\n    </WrapChart>\n  );\n}\n\n// CategoryScale,\n// LinearScale,\n\n// const counterUsers = name => {\n//   let counter = 0;\n//   for (const item of arr) {\n//     if (item.organizer === name) {\n//       let count = Number(item.participants.length);\n//       counter += count;\n//     }\n//   }\n//   return counter;\n// };\n// const beetroot = counterUsers('Beetroot');\n// const goit = counterUsers('GoIT');\n// const hillel = counterUsers('Hillel');\n// const itstep = counterUsers('IT STEP');\n// const itvdn = counterUsers('ITVDN');\n// const mate = counterUsers('Mate academy');\n// const octen = counterUsers('OKTEN');\n// const web = counterUsers('Web Academy');\n// const range = [beetroot, goit, hillel, itstep, itvdn, mate, octen, web];\n","import React from 'react';\nimport getCategories from '../../helper/categories';\nimport { getOrganizerRatings } from './helpers';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { WrapChart } from './Chart.styled';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport const options = {\n  responsive: true,\n  plugins: {\n    height: '650px',\n    legend: {\n      position: 'top',\n      labels: {\n        font: {\n          size: 14,\n        },\n        color: 'rgb(255, 255, 255)',\n      },\n    },\n  },\n};\n\nexport default function СircleOrganizer({ data }) {\n  const labels = getCategories(data, 'organizer');\n  const ratings = getOrganizerRatings(data, labels);\n\n  const dough = {\n    labels,\n    datasets: [\n      {\n        label: 'Organizeries',\n        data: ratings.map(el => el),\n        backgroundColor: [\n          '#ffeb3b',\n          '#b388ff',\n          '#ff8a65',\n          '#00e676',\n          '#ff80ab',\n          '#cfd8dc',\n          '#ffb74d',\n          '#8c9eff',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n  return (\n    <WrapChart>\n      <Doughnut options={options} data={dough} width=\"300\" height=\"300\" />;\n    </WrapChart>\n  );\n}\n","import React from 'react';\nimport { WrapCartOrganizer } from './Chart.styled';\nimport BarOrganizer from './BarOrganizer';\nimport СircleOrganizer from './СircleOrganizer';\nexport default function ChartsOrganizer({ data }) {\n  return (\n    <WrapCartOrganizer>\n      <BarOrganizer data={data} />\n      <СircleOrganizer data={data} />\n    </WrapCartOrganizer>\n  );\n}\n","import React from 'react';\nimport getCategories from '../../helper/categories';\nimport { getSpecialityRatings } from './helpers';\nimport { useTranslation } from 'react-i18next';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { WrapChart } from './Chart.styled';\nChartJS.register(\n  BarElement,\n  CategoryScale,\n  LinearScale,\n  Title,\n  Tooltip,\n  Legend\n);\n\n// export const options = {\n//   indexAxis: 'y',\n//   elements: {\n//     bar: {\n//       borderWidth: 1,\n//     },\n//   },\n//   responsive: true,\n//   plugins: {\n//     legend: {\n//       position: 'top',\n//       labels: {\n//         font: {\n//           size: 14,\n//         },\n//         color: 'rgb(255, 255, 255)',\n//       },\n//     },\n//     title: {\n//       display: true,\n//       text: 'Registered participants by speciality',\n//       color: 'rgb(255, 255, 255)',\n//       font: {\n//         size: 16,\n//       },\n//     },\n//   },\n// };\n\nexport default function BarSpeciality({ data }) {\n  const { t } = useTranslation();\n  const labels = getCategories(data, 'title');\n  const ratings = getSpecialityRatings(data, labels);\n\n  const options = {\n    indexAxis: 'y',\n    elements: {\n      bar: {\n        borderWidth: 1,\n      },\n    },\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          font: {\n            size: 14,\n          },\n          color: 'rgb(255, 255, 255)',\n        },\n      },\n      title: {\n        display: true,\n        text: `${t('chart.title2')}`,\n        color: 'rgb(255, 255, 255)',\n        font: {\n          size: 16,\n        },\n      },\n    },\n  };\n\n  const bar = {\n    labels,\n    datasets: [\n      {\n        label: `${t('chart.label2')}`,\n        data: ratings.map(el => el),\n        backgroundColor: '#64dd17',\n        borderWidth: 1,\n        borderColor: ' #ffffff',\n      },\n    ],\n  };\n\n  return (\n    <WrapChart>\n      <Bar options={options} data={bar} width=\"300px\" height=\"450px\" />\n    </WrapChart>\n  );\n}\n","import React from 'react';\nimport getCategories from '../../helper/categories';\nimport { getSpecialityRatings } from './helpers';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { WrapChart } from './Chart.styled';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top',\n      labels: {\n        font: {\n          size: 10,\n        },\n        color: 'rgb(255, 255, 255)',\n      },\n    },\n  },\n};\n\nexport default function CircleSpeciality({ data }) {\n  const labels = getCategories(data, 'title');\n  const ratings = getSpecialityRatings(data, labels);\n\n  const dough = {\n    labels,\n    datasets: [\n      {\n        label: 'Specialities',\n        data: ratings.map(el => el),\n        backgroundColor: [\n          '#ffeb3b',\n          '#b388ff',\n          '#ff8a65',\n          '#00e676',\n          '#ff80ab',\n          '#cfd8dc',\n          '#ffb74d',\n          '#8c9eff',\n          '#ffeb3b',\n          '#b388ff',\n          '#ff8a65',\n          '#00e676',\n          '#ff80ab',\n          '#cfd8dc',\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n  return (\n    <WrapChart>\n      <Doughnut options={options} data={dough} width=\"300px\" height=\"450px\" />;\n    </WrapChart>\n  );\n}\n","import React from 'react';\nimport { WrapCartSpeciality } from './Chart.styled';\nimport BarSpeciality from './BarSpeciality';\nimport CircleSpeciality from './CircleSpeciality';\n\nexport default function ChartsSpeciality({ data }) {\n  return (\n    <WrapCartSpeciality>\n      <BarSpeciality data={data} />\n      <CircleSpeciality data={data} />\n    </WrapCartSpeciality>\n  );\n}\n","import React, { useRef } from 'react';\nimport { WrapGoBack, WrapPage } from './Page.styled';\nimport Loading from 'helper/Loading';\nimport { Link, useLocation } from 'react-router-dom';\nimport { WrapCharts } from 'components/charts/Chart.styled';\nimport ChartsOrganizer from 'components/charts/ChartsOrganizer';\nimport ChartsSpeciality from 'components/charts/ChartsSpeciality';\nimport { useGetEventsAllQuery } from '../redux/EventSlice';\nimport { useTranslation } from 'react-i18next';\n\nexport default function ChartPage() {\n  const { t } = useTranslation();\n  const location = useLocation();\n  const backHref = useRef(location.state?.from ?? '/');\n  const { data, isLoading } = useGetEventsAllQuery();\n\n  return (\n    <WrapPage>\n      <WrapGoBack>\n        <Link to={backHref.current} className=\"back\">\n          {t('back')}\n        </Link>\n      </WrapGoBack>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <WrapCharts>\n          <ChartsOrganizer data={data} />\n          <ChartsSpeciality data={data} />\n        </WrapCharts>\n      )}\n    </WrapPage>\n  );\n}\n","import styled from 'styled-components';\n\nexport const WrapHomePage = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  padding: 20px;\n  margin: 0 auto;\n  @media only screen and (min-width: 768px) {\n    padding: 20px;\n  }\n`;\nexport const WrapGoBack = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px 0;\n  margin: 0 auto;\n  .back {\n    font-size: 20px;\n    font-weight: 600;\n    line-height: 1.11;\n    text-align: center;\n    color: #ffffff;\n    text-decoration: none;\n    padding: 0;\n  }\n`;\nexport const WrapPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n  padding: 0;\n  margin: 0 auto;\n`;\n"],"names":["getCategories","items","itemName","reduce","acc","item","includes","push","sort","a","b","localeCompare","WrapCharts","styled","_templateObject","_taggedTemplateLiteral","WrapCartOrganizer","_templateObject2","WrapCartSpeciality","_templateObject3","WrapChart","_templateObject4","getOrganizerRatings","data","labels","organizerRatings","forEach","organizer","participants","findIndex","label","length","Object","values","getSpecialityRatings","specialityRatings","title","BarOrganizer","_ref","t","useTranslation","ratings","options","indexAxis","elements","bar","borderWidth","responsive","plugins","legend","position","font","size","color","display","text","concat","datasets","map","el","backgroundColor","borderColor","_jsx","children","Bar","width","height","ChartJS","BarElement","CategoryScale","LinearScale","Title","Tooltip","Legend","ArcElement","СircleOrganizer","dough","_jsxs","Doughnut","ChartsOrganizer","BarSpeciality","CircleSpeciality","ChartsSpeciality","ChartPage","_location$state$from","_location$state","location","useLocation","backHref","useRef","state","from","isLoading","useGetEventsAllQuery","WrapPage","WrapGoBack","Link","to","current","className","Loading","WrapHomePage"],"sourceRoot":""}