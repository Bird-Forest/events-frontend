{"version":3,"file":"static/js/784.3ad24643.chunk.js","mappings":"8LAAaA,EACX,mE,4tiBCGWC,EAAWC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mNAWpBC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6NAUpBG,EAAYL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+LAUrBK,EAAeP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,kIAQvBO,EAAWT,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8GAMrBS,EAAWX,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,mGAKrBW,EAAWb,EAAAA,GAAAA,GAASc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,6GAOpBa,EAAWf,EAAAA,GAAAA,GAASgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,6GAOpBe,EAAWjB,EAAAA,GAAAA,IAAUkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,0GAMrBiB,GAAWnB,EAAAA,EAAAA,IAAOoB,EAAAA,GAAPpB,CAAYqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,iU,SC7DrB,SAASoB,EAAKC,GAAY,IAATC,EAAID,EAAJC,KACxBC,EAAU,IAAIC,KAAKF,EAAKG,MACxBC,EAAOH,EAAQI,qBACfC,EAAQL,EAAQM,cAChBC,EAAUP,EAAQQ,aAExB,OACEC,EAAAA,EAAAA,MAAC/B,EAAQ,CAAAgC,SAAA,EACPC,EAAAA,EAAAA,KAAC/B,EAAS,CAAA8B,SAAEX,EAAKa,SACjBH,EAAAA,EAAAA,MAACzB,EAAQ,CAAA0B,SAAA,EACPD,EAAAA,EAAAA,MAACnB,EAAQ,CAAAoB,SAAA,CAAC,IAAEX,EAAKc,cACjBF,EAAAA,EAAAA,KAACvB,EAAQ,CAAAsB,SAAEP,KACXM,EAAAA,EAAAA,MAACvB,EAAQ,CAAAwB,SAAA,EACPC,EAAAA,EAAAA,KAACvB,EAAQ,CAAAsB,SAAEL,KACXM,EAAAA,EAAAA,KAACvB,EAAQ,CAAAsB,SAAE,OACXC,EAAAA,EAAAA,KAACvB,EAAQ,CAAAsB,SAAEH,WAGfI,EAAAA,EAAAA,KAAC7B,EAAY,CAAA4B,SAAEX,EAAKe,eACpBL,EAAAA,EAAAA,MAACjB,EAAQ,CAAAkB,SAAA,EACPC,EAAAA,EAAAA,KAACjB,EAAQ,CAAAgB,SAAC,cACVC,EAAAA,EAAAA,KAACjB,EAAQ,CAAAgB,SAAC,cAIlB,CChCe,SAASK,IACtB,OACEJ,EAAAA,EAAAA,KAACrC,EAAQ,CAAAoC,SACNM,EAAAA,KAAW,SAAAjB,GAAI,OACdY,EAAAA,EAAAA,KAACd,EAAK,CAAgBE,KAAMA,GCUhB,WAGlB,IAHiC,IAAdkB,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACtBG,EAAK,GACLC,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWR,IAC3CA,KACLI,GAAMK,EAAgC,GAAdJ,EAAML,IAEhC,OAAOI,CACT,CDjBoBM,GAAwB,KAI5C,C,cEVe,SAASC,IACtB,OACEjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAQ,CAAAnB,UACPC,EAAAA,EAAAA,KAACI,EAAS,KAGhB,C,sECRac,E,QAAWtD,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0I","sources":["../node_modules/nanoid/url-alphabet/index.js","components/events/Event.styled.js","components/events/Event.jsx","components/events/EventList.jsx","../node_modules/nanoid/index.browser.js","pages/HomePage.jsx","pages/Page.styled.js"],"sourcesContent":["export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n// ***** EVENTLIST *****\nexport const ListWrap = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));\n  grid-auto-rows: auto;\n  grid-auto-flow: row;\n  gap: 16px;\n  list-style: none;\n  padding: 0;\n  margin: 0 auto;\n`;\n//***** ITEM *****/\nexport const ItemWrap = styled.li`\n  display: grid;\n  grid-template-columns: 344px;\n  grid-template-rows: 40px 32px 210px 40px;\n  gap: 8px;\n  background-color: #00bcd4;\n  border-radius: 10px;\n  border: 1px solid #4dd0e1;\n  padding: 16px;\n`;\nexport const ItemTitle = styled.h3`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n  color: #ffffff;\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1.5;\n  text-align: center;\n`;\nexport const ItemDescript = styled.p`\n  display: grid;\n  color: #ffffff;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.5;\n  text-align: left;\n`;\nexport const WrapDate = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr 1fr;\n  grid-template-rows: auto;\n  gap: 16px;\n`;\nexport const WrapTime = styled.div`\n  display: grid;\n  grid-template-columns: auto auto auto;\n  grid-template-rows: auto;\n`;\nexport const ItemDate = styled.h4`\n  display: grid;\n  color: #006064;\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.5;\n`;\nexport const ItemOrgn = styled.h4`\n  display: grid;\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.5;\n`;\nexport const WrapLink = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto;\n  gap: 16px;\n`;\nexport const ItemLink = styled(Link)`\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.5;\n  text-decoration: none;\n  background-color: #00acc1;\n  border-radius: 8px;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: #0097a7;\n  }\n`;\n","import React from 'react';\nimport {\n  ItemDate,\n  ItemDescript,\n  ItemLink,\n  ItemOrgn,\n  ItemTitle,\n  ItemWrap,\n  WrapDate,\n  WrapLink,\n  WrapTime,\n} from './Event.styled';\n\nexport default function Event({ item }) {\n  const dateObj = new Date(item.data);\n  const date = dateObj.toLocaleDateString();\n  const hours = dateObj.getUTCHours();\n  const minutes = dateObj.getMinutes();\n\n  return (\n    <ItemWrap>\n      <ItemTitle>{item.title}</ItemTitle>\n      <WrapDate>\n        <ItemOrgn> {item.organizer}</ItemOrgn>\n        <ItemDate>{date}</ItemDate>\n        <WrapTime>\n          <ItemDate>{hours}</ItemDate>\n          <ItemDate>{':'}</ItemDate>\n          <ItemDate>{minutes}</ItemDate>\n        </WrapTime>\n      </WrapDate>\n      <ItemDescript>{item.description}</ItemDescript>\n      <WrapLink>\n        <ItemLink>Register</ItemLink>\n        <ItemLink>View</ItemLink>\n      </WrapLink>\n    </ItemWrap>\n  );\n}\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport events from '../../data/events.json';\nimport Event from './Event';\nimport { ListWrap } from './Event.styled';\n\nexport default function EventList() {\n  return (\n    <ListWrap>\n      {events.map(item => (\n        <Event key={nanoid()} item={item} />\n      ))}\n    </ListWrap>\n  );\n}\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","import EventList from 'components/events/EventList';\nimport React from 'react';\nimport { WrapPage } from './Page.styled';\n\nexport default function HomePage() {\n  return (\n    <WrapPage>\n      <EventList />\n    </WrapPage>\n  );\n}\n","import styled from 'styled-components';\n\nexport const WrapPage = styled.div`\n  display: grid;\n  grid-template-columns: minmax(380px, 1fr);\n  grid-template-rows: 1fr;\n  padding: 20px;\n  margin: 0 auto;\n`;\n"],"names":["urlAlphabet","ListWrap","styled","_templateObject","_taggedTemplateLiteral","ItemWrap","_templateObject2","ItemTitle","_templateObject3","ItemDescript","_templateObject4","WrapDate","_templateObject5","WrapTime","_templateObject6","ItemDate","_templateObject7","ItemOrgn","_templateObject8","WrapLink","_templateObject9","ItemLink","Link","_templateObject10","Event","_ref","item","dateObj","Date","data","date","toLocaleDateString","hours","getUTCHours","minutes","getMinutes","_jsxs","children","_jsx","title","organizer","description","EventList","events","size","arguments","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array","scopedUrlAlphabet","nanoid","HomePage","WrapPage"],"sourceRoot":""}