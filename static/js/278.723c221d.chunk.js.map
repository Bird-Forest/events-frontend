{"version":3,"file":"static/js/278.723c221d.chunk.js","mappings":"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","sources":["pages/Page.styled.js","components/registration/Register.styled.js","components/registration/FormInput.jsx","components/registration/FormRadio.jsx","components/registration/Registration.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapPage = styled.div`\n  display: grid;\n  grid-template-columns: minmax(380px, 1fr);\n  grid-template-rows: 1fr;\n  padding: 20px;\n  margin: 0 auto;\n`;\n","import styled from 'styled-components';\n\nexport const FormWrap = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: #fafafa;\n  margin: 0;\n  padding: 0;\n\n  .my-form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    max-width: 300px;\n    background-color: white;\n    border-radius: 16px;\n    border: 2px solid #eeeeee;\n    margin: 8px auto;\n    gap: 4px;\n    padding: 8px;\n  }\n  .my-title {\n    font-size: clamp(0.75rem, 0.659rem + 0.45vw, 1rem);\n    text-align: center;\n    font-weight: 700;\n    color: #616161;\n    padding: 0;\n    margin: 0;\n  }\n  .button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n    color: white;\n    font-size: 16px;\n    font-weight: 700;\n    background-color: #bdbdbd;\n    border-radius: 16px;\n    border: 1px solid #bdbdbd;\n    outline: #bdbdbd;\n    height: 40px;\n    margin: 0;\n    padding: 0 100px;\n    cursor: pointer;\n    &:hover,\n    :focus {\n      background-color: #757575;\n    }\n    @media screen and (min-width: 767px) {\n      margin: 8px auto;\n    }\n  }\n`;\n\nexport const InputWrap = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  margin: 8px auto 8px auto;\n  .my-input {\n    display: flex;\n    flex-grow: 1;\n    /* height: 20px; */\n    font-size: 16px;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 4px 8px;\n    margin: 0;\n  }\n  .my-input.error {\n    border: 2px solid #ff1744;\n  }\n  .label-input {\n    position: absolute;\n    top: -24%;\n    left: 28px;\n    font-size: 14px;\n    text-align: center;\n    color: #616161;\n    background-color: white;\n    pointer-events: none;\n    transition: all 0.2s ease-in-out;\n    padding: 0;\n    margin: 0;\n  }\n  .label-input.error {\n    color: #ff1744;\n  }\n  .my-password {\n    display: flex;\n    flex-grow: 1;\n    /* height: 20px; */\n    font-size: 16px;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 4px 8px;\n    margin: 0;\n  }\n  .my-password.error {\n    border: 2px solid #ff1744;\n  }\n`;\nexport const RadioWrap = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 40px 40px;\n  .radio-title {\n    display: grid;\n    font-size: 16px;\n    border-radius: 8px;\n    border: 2px solid #616161;\n    outline: #616161;\n    padding: 4px 8px;\n    margin: 0;\n  }\n  .radio-group {\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-rows: 1fr;\n  }\n  .lable-picked {\n    display: grid;\n    font-size: 16px;\n    color: #616161;\n  }\n  .label-picked.error {\n    color: #ff1744;\n  }\n  .input-picked {\n    display: grid;\n    font-size: 16px;\n    color: #616161;\n  }\n  .input-picked.error {\n    border: 2px solid #ff1744;\n  }\n`;\nexport const ErrorMessage = styled.div`\n  color: #ff1744;\n  font-size: 12px;\n`;\n","import { useField } from 'formik';\nimport React from 'react';\nimport { ErrorMessage, InputWrap } from './Register.styled';\n\nexport default function FormInput({ label, ...props }) {\n  const [field, meta] = useField(props);\n  const errorClass = meta.touched && meta.error ? 'error' : '';\n  return (\n    <InputWrap>\n      <label\n        htmlFor={props.id || props.name}\n        className={`label-input ${errorClass}`}\n      >\n        {label}\n      </label>\n      <input className={`my-input ${errorClass}`} {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </InputWrap>\n  );\n}\n","import { useField } from 'formik';\nimport React from 'react';\nimport { ErrorMessage, RadioWrap } from './Register.styled';\n\n// export default function FormRadio({ label, ...props }) {\n//   const [field, meta] = useField({ ...props, type: 'radio' });\n//   const errorClass = meta.touched && meta.error ? 'error' : '';\n//   return (\n//     <RadioWrap>\n//       <div id=\"radio-group\" className=\"radio-title\">\n//         Where did your hear about this event\n//       </div>\n//       <div role=\"group\" aria-labelledby=\"radio-group\" className=\"radio-group\">\n//         <label\n//           htmlFor=\"picked\"\n//           //   className=\"lable-picked\"\n//           className={`label-picked ${errorClass}`}\n//         >\n//           Social media\n//           <input\n//             type=\"radio\"\n//             name=\"picked\"\n//             value=\"Social media\"\n//             {...field}\n//             {...props}\n//             // className=\"input-picked\"\n//             className={`input-input ${errorClass}`}\n//           />\n//         </label>\n//         {meta.touched && meta.error ? (\n//           <ErrorMessage>{meta.error}</ErrorMessage>\n//         ) : null}\n//         <label\n//           htmlFor=\"picked\"\n//           //   className=\"lable-picked\"\n//           className={`label-picked ${errorClass}`}\n//         >\n//           Friends\n//           <input\n//             type=\"radio\"\n//             name=\"picked\"\n//             value=\"Friends\"\n//             {...field}\n//             {...props}\n//             // className=\"input-picked\"\n//             className={`input-input ${errorClass}`}\n//           />\n//         </label>\n//         {meta.touched && meta.error ? (\n//           <ErrorMessage>{meta.error}</ErrorMessage>\n//         ) : null}\n//         <label\n//           htmlFor=\"picked\"\n//           //   className=\"lable-picked\"\n//           className={`label-picked ${errorClass}`}\n//         >\n//           Found myself\n//           <input\n//             type=\"radio\"\n//             name=\"picked\"\n//             value=\"Found myself\"\n//             {...field}\n//             {...props}\n//             // className=\"input-picked\"\n//             className={`input-input ${errorClass}`}\n//           />\n//         </label>\n//         {meta.touched && meta.error ? (\n//           <ErrorMessage>{meta.error}</ErrorMessage>\n//         ) : null}\n//       </div>\n//     </RadioWrap>\n//   );\n// }\nexport default function FormRadio({ name, options }) {\n  const [field, meta] = useField(name);\n  const errorClass = meta.touched && meta.error ? 'error' : '';\n\n  return (\n    <RadioWrap>\n      {options.map(option => (\n        <label key={option.value} className={`label-picked ${errorClass}`}>\n          <input\n            type=\"radio\"\n            {...field}\n            value={option.value}\n            checked={field.value === option.value}\n            className={`input-input ${errorClass}`}\n            // className=\"input-picked\"\n          />\n          {option.label}\n        </label>\n      ))}\n      {meta.touched && meta.error ? (\n        <ErrorMessage>{meta.error}</ErrorMessage>\n      ) : null}\n    </RadioWrap>\n  );\n}\n// {meta.touched && meta.error ? (\n// <ErrorMessage>{meta.error}</ErrorMessage>) : null}\n","import { Form, Formik } from 'formik';\nimport React from 'react';\nimport * as Yup from 'yup';\nimport FormInput from './FormInput';\nimport FormRadio from './FormRadio';\nimport { FormWrap } from './Register.styled';\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(5, 'Too Short!')\n    .max(15, 'Too Long!')\n    .required('This field is required'),\n  email: Yup.string().email('Invalid email').required('This field is required'),\n  birthDate: Yup.date()\n    // .nullable('YYYY.MM.DD')\n    .min(new Date(1900, 0, 1))\n    .required('YYYY.MM.DD'),\n  radioValue: Yup.string().required('Please select'),\n  //   picked: Yup.string().required('Please select'),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  birthDate: '',\n  radioValue: '',\n};\n\nexport default function Registration() {\n  const radioOptions = [\n    { value: 'Social media', label: 'Social media' },\n    { value: 'Friends', label: 'Friends' },\n    { value: 'Found myself', label: 'Found myself' },\n  ];\n  return (\n    <FormWrap>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(true);\n            console.log(values);\n            resetForm();\n          }, 400);\n        }}\n      >\n        {props => (\n          <Form className=\"my-form\" autoComplete=\"off\">\n            <h3 className=\"my-title\"> Event registration</h3>\n            <FormInput label=\"Name*\" name=\"name\" type=\"text\" />\n            <FormInput label=\"Email*\" name=\"email\" type=\"email\" />\n            <FormInput label=\"Date*\" name=\"birthDate\" type=\"birthDate\" />\n            {/* <FormRadio label=\"picked\" name=\"picked\" type=\"radio\" /> */}\n            <FormRadio name=\"radioValue\" options={radioOptions} />\n            <button type=\"submit\" className=\"button\">\n              {props.isSubmitting ? 'loading...' : 'Submit'}\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </FormWrap>\n  );\n}\n","import React from 'react';\nimport { WrapPage } from './Page.styled';\nimport Registration from 'components/registration/Registration';\n\nexport default function RegisterPage() {\n  return (\n    <WrapPage>\n      <Registration />\n    </WrapPage>\n  );\n}\n"],"names":["WrapPage","styled","_templateObject","_taggedTemplateLiteral","FormWrap","InputWrap","_templateObject2","RadioWrap","_templateObject3","ErrorMessage","_templateObject4","FormInput","_ref","label","props","_objectWithoutProperties","_excluded","_useField","useField","_useField2","_slicedToArray","field","meta","errorClass","touched","error","_jsxs","children","_jsx","htmlFor","id","name","className","concat","_objectSpread","FormRadio","options","map","option","type","value","checked","validationSchema","Yup","min","max","required","email","birthDate","Date","radioValue","initialValues","Registration","radioOptions","Formik","onSubmit","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","console","log","Form","autoComplete","isSubmitting","RegisterPage"],"sourceRoot":""}