{"version":3,"file":"static/js/105.3616e226.chunk.js","mappings":"0LAIe,SAASA,EAASC,GAAe,IAAZC,EAAOD,EAAPC,QAClC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAAAC,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaF,SAAEH,KAC7BI,EAAAA,EAAAA,KAACE,EAAAA,IAAgB,CAACD,UAAU,iBAGlC,C,sECTaE,E,QAAWC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0I,yGCArBC,EAAeH,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+KAUxBE,EAAWJ,EAAAA,GAAAA,GAASK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,6QAapBI,EAAWN,EAAAA,GAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,kJ,SCtBlB,SAASM,EAAQjB,GAAY,IAATkB,EAAIlB,EAAJkB,KACjC,OACEhB,EAAAA,EAAAA,MAACW,EAAQ,CAAAT,SAAA,EACPC,EAAAA,EAAAA,KAACU,EAAQ,CAAAX,SAAEc,EAAKC,QAChBd,EAAAA,EAAAA,KAACU,EAAQ,CAAAX,SAAEc,EAAKE,UAGtB,C,aCLe,SAASC,EAAQrB,GAAY,IACpCsB,EAD+BtB,EAAJuB,KACdC,aACnB,OACEnB,EAAAA,EAAAA,KAACO,EAAY,CAAAR,SACVkB,EAAMG,KAAI,SAAAP,GAAI,OACbb,EAAAA,EAAAA,KAACY,EAAQ,CAAgBC,KAAMA,IAAhBQ,EAAAA,EAAAA,MAAwB,KAI/C,C,mDCNe,SAASC,IACtB,IACMC,GADSC,EAAAA,EAAAA,MACGD,GAClBE,GAAmCC,EAAAA,EAAAA,IAAqBH,GAAhDL,EAAIO,EAAJP,KAAMS,EAAKF,EAALE,MAAOC,EAASH,EAATG,UACrB,OACE/B,EAAAA,EAAAA,MAACM,EAAAA,EAAQ,CAAAJ,SAAA,CACN6B,GAAY5B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAO,KAAM7B,EAAAA,EAAAA,KAACgB,EAAQ,CAACE,KAAMA,IAC1CS,IACC3B,EAAAA,EAAAA,KAACN,EAAAA,EAAS,CACRE,QAAS,wDAKnB,C,uDCtBO,IAAMkC,EACX,mECmBST,EAAS,WAGlB,IAHiC,IAAdU,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACtBT,EAAK,GACLY,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWP,IAC3CA,KACLR,GAAMgB,EAAgC,GAAdJ,EAAMJ,IAEhC,OAAOR,CACT,C","sources":["helper/EmptyPage.jsx","pages/Page.styled.js","components/view/View.styled.js","components/view/ViewItem.jsx","components/view/ViewList.jsx","pages/ViewPage.jsx","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import React from 'react';\nimport { GiSherlockHolmes } from 'react-icons/gi';\nimport { WrapEmpty } from './Helper.styled';\n\nexport default function EmptyPage({ message }) {\n  return (\n    <WrapEmpty>\n      <h2 className=\"empty-title\">{message}</h2>\n      <GiSherlockHolmes className=\"icon-empty\" />\n    </WrapEmpty>\n  );\n}\n","import styled from 'styled-components';\n\nexport const WrapPage = styled.div`\n  display: grid;\n  grid-template-columns: minmax(380px, 1fr);\n  grid-template-rows: 1fr;\n  padding: 20px;\n  margin: 0 auto;\n`;\n","import styled from 'styled-components';\n\nexport const WrapViewList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n  justify-content: center;\n  gap: 16px;\n  list-style: none;\n  padding: 0;\n  margin: 0 auto;\n`;\nexport const WrapItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 320px;\n  height: 80px;\n  align-content: center;\n  background-color: #00bcd4;\n  border-radius: 16px;\n  border: 1px solid #4dd0e1;\n  padding: 16px;\n`;\nexport const ViewText = styled.h4`\n  display: flex;\n  gap: 20px;\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.5;\n  text-align: center;\n`;\n","import React from 'react';\nimport { ViewText, WrapItem } from './View.styled';\n\nexport default function ViewItem({ item }) {\n  return (\n    <WrapItem>\n      <ViewText>{item.name}</ViewText>\n      <ViewText>{item.email}</ViewText>\n    </WrapItem>\n  );\n}\n","import React from 'react';\nimport { WrapViewList } from './View.styled';\nimport ViewItem from './ViewItem';\nimport { nanoid } from 'nanoid';\n\nexport default function ViewList({ data }) {\n  const users = data.participants;\n  return (\n    <WrapViewList>\n      {users.map(item => (\n        <ViewItem key={nanoid()} item={item} />\n      ))}\n    </WrapViewList>\n  );\n}\n","import ViewList from 'components/view/ViewList';\nimport React from 'react';\nimport { WrapPage } from './Page.styled';\nimport { useGetEventByIdQuery } from '../redux/EventSlice';\nimport Loading from 'helper/Loading';\nimport EmptyPage from 'helper/EmptyPage';\nimport { useParams } from 'react-router-dom';\n\nexport default function ViewPage() {\n  const params = useParams();\n  const id = params.id;\n  const { data, error, isLoading } = useGetEventByIdQuery(id);\n  return (\n    <WrapPage>\n      {isLoading ? <Loading /> : <ViewList data={data} />}\n      {error && (\n        <EmptyPage\n          message={'The service is temporarily unavailable. Try later'}\n        />\n      )}\n    </WrapPage>\n  );\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n"],"names":["EmptyPage","_ref","message","_jsxs","WrapEmpty","children","_jsx","className","GiSherlockHolmes","WrapPage","styled","_templateObject","_taggedTemplateLiteral","WrapViewList","WrapItem","_templateObject2","ViewText","_templateObject3","ViewItem","item","name","email","ViewList","users","data","participants","map","nanoid","ViewPage","id","useParams","_useGetEventByIdQuery","useGetEventByIdQuery","error","isLoading","Loading","urlAlphabet","size","arguments","length","undefined","bytes","crypto","getRandomValues","Uint8Array","scopedUrlAlphabet"],"sourceRoot":""}