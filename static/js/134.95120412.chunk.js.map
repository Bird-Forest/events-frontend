{"version":3,"file":"static/js/134.95120412.chunk.js","mappings":"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","sources":["components/events/Event.jsx","components/events/Event.styled.js","helper/EmptyPage.jsx","components/events/EventList.jsx","pages/HomePage.jsx","pages/Page.styled.js"],"sourcesContent":["import React from 'react';\nimport {\n  ItemDate,\n  ItemDescript,\n  ItemLink,\n  ItemOrgn,\n  ItemTitle,\n  ItemWrap,\n  WrapDate,\n  WrapLink,\n  WrapTime,\n} from './Event.styled';\n\nexport default function Event({ item }) {\n  const dateObj = new Date(item.date);\n  const date = dateObj.toLocaleDateString();\n  const hours = dateObj.getUTCHours();\n  const minutes = dateObj.getMinutes();\n  const id = item._id;\n\n  return (\n    <ItemWrap>\n      <WrapDate>\n        <ItemOrgn> {item.organizer}</ItemOrgn>\n        <ItemDate>{date}</ItemDate>\n        <WrapTime>\n          <ItemDate>{hours}</ItemDate>\n          <ItemDate>{':'}</ItemDate>\n          <ItemDate>{minutes}</ItemDate>\n        </WrapTime>\n      </WrapDate>\n      <ItemTitle>{item.title}</ItemTitle>\n      <ItemDescript>{item.description}</ItemDescript>\n      <WrapLink>\n        <ItemLink to={`${id}/register`}>Register</ItemLink>\n        <ItemLink to={`${id}/view`}>View</ItemLink>\n      </WrapLink>\n    </ItemWrap>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MainWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n  align-items: center;\n  background-color: #b2ebf2;\n  gap: 20px;\n  padding: 0;\n  margin: 0;\n`;\n\n// ***** EVENTLIST *****\nexport const ListWrap = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n  justify-content: center;\n  gap: 16px;\n  list-style: none;\n  padding: 0;\n  margin: 0 auto;\n`;\n//***** ITEM *****/\nexport const ItemWrap = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  width: 340px;\n  height: 380px;\n  gap: 8px;\n  background-color: #00bcd4;\n  border-radius: 10px;\n  border: 1px solid #4dd0e1;\n  padding: 20px;\n`;\nexport const ItemTitle = styled.h3`\n  display: flex;\n  color: #ffffff;\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1.5;\n  text-align: center;\n`;\nexport const WrapDate = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 28px;\n`;\nexport const ItemOrgn = styled.h4`\n  display: flex;\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.5;\n`;\nexport const WrapTime = styled.div`\n  display: flex;\n`;\nexport const ItemDate = styled.h4`\n  display: flex;\n  color: #006064;\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.5;\n`;\nexport const ItemDescript = styled.p`\n  display: flex;\n  color: #ffffff;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.5;\n  text-align: left;\n`;\nexport const WrapLink = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 16px;\n`;\nexport const ItemLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 160px;\n  height: 60px;\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 1.5;\n  text-decoration: none;\n  background-color: #00acc1;\n  border-radius: 8px;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: #0097a7;\n  }\n`;\nexport const WrapBtn = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 300px;\n  height: 48px;\n  padding: 0;\n  margin: 0 auto;\n`;\nexport const BtnPagin = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  width: 48px;\n  height: 48px;\n  border: none;\n  outline: transparent;\n  background-color: #00acc1;\n  cursor: pointer;\n  &:hover,\n  :focus {\n    background-color: #0097a7;\n  }\n  .btn-icon {\n    width: 28px;\n    height: 28px;\n    fill: #ffffff;\n  }\n`;\nexport const TextWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  .text {\n    font-size: 32px;\n    font-weight: 600;\n    color: #006064;\n  }\n`;\n","import React from 'react';\nimport { WrapEmpty } from './Helper.styled';\nimport { GiSpiderWeb } from 'react-icons/gi';\n\nexport default function EmptyPage({ message }) {\n  return (\n    <WrapEmpty>\n      <GiSpiderWeb className=\"icon-empty\" />\n      <h2 className=\"empty-title\">{message}</h2>\n    </WrapEmpty>\n  );\n}\n","import React, { useState } from 'react';\nimport Event from './Event';\nimport {\n  BtnPagin,\n  ListWrap,\n  MainWrap,\n  TextWrap,\n  WrapBtn,\n} from './Event.styled';\nimport { useGetEventsQuery } from '../../redux/EventSlice';\nimport Loading from '../../helper/Loading';\nimport EmptyPage from '../../helper/EmptyPage';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\n\nexport default function EventList() {\n  const [page, setPage] = useState(1);\n  const { data, isLoading } = useGetEventsQuery(page);\n  console.log(data);\n  const totalItems = 60;\n  const limit = 4;\n  let totalPage = Math.ceil(totalItems / limit);\n  const showArr = Array.isArray(data) && data.length !== 0;\n  return (\n    <MainWrap>\n      {isLoading && <Loading />}\n      {showArr ? (\n        <>\n          <ListWrap>\n            {data.map(item => (\n              <Event key={nanoid()} item={item} />\n            ))}\n          </ListWrap>\n          <WrapBtn>\n            <BtnPagin onClick={() => setPage(page - 1)} disabled={page === 1}>\n              <FaArrowLeft className=\"btn-icon\" />\n            </BtnPagin>\n            <TextWrap>\n              <p className=\"text\">{page}</p>\n              <p className=\"text\">/</p>\n              <p className=\"text\">{totalPage}</p>\n            </TextWrap>\n            <BtnPagin\n              onClick={() => setPage(page + 1)}\n              disabled={page === totalPage}\n            >\n              <FaArrowRight className=\"btn-icon\" />\n            </BtnPagin>\n          </WrapBtn>\n        </>\n      ) : (\n        <EmptyPage\n          message={'The service is temporarily unavailable. Try later'}\n        />\n      )}\n    </MainWrap>\n  );\n}\n","import EventList from '../components/events/EventList';\nimport React from 'react';\nimport { WrapPage } from './Page.styled';\n\nexport default function HomePage() {\n  return (\n    <WrapPage>\n      <EventList />\n    </WrapPage>\n  );\n}\n","import styled from 'styled-components';\n\nexport const WrapPage = styled.div`\n  display: grid;\n  grid-template-columns: minmax(380px, 1fr);\n  grid-template-rows: 1fr;\n  padding: 20px;\n  margin: 0 auto;\n`;\n"],"names":["Event","_ref","item","dateObj","Date","date","toLocaleDateString","hours","getUTCHours","minutes","getMinutes","id","_id","_jsxs","ItemWrap","children","WrapDate","ItemOrgn","organizer","_jsx","ItemDate","WrapTime","ItemTitle","title","ItemDescript","description","WrapLink","ItemLink","to","concat","MainWrap","styled","_templateObject","_taggedTemplateLiteral","ListWrap","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","Link","_templateObject11","WrapBtn","_templateObject12","BtnPagin","_templateObject13","TextWrap","_templateObject14","EmptyPage","message","WrapEmpty","GiSpiderWeb","className","EventList","_useState","useState","_useState2","_slicedToArray","page","setPage","_useGetEventsQuery","useGetEventsQuery","data","isLoading","console","log","totalPage","Math","ceil","totalItems","showArr","Array","isArray","length","Loading","_Fragment","map","nanoid","onClick","disabled","FaArrowLeft","FaArrowRight","HomePage","WrapPage"],"sourceRoot":""}